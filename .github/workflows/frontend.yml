# .github/workflows/frontend.yml
name: CI for apps/frontend

env:
  FRONTEND_DIR: apps/frontend
  NODE_VERSION: lts/*

on:
  push:
    branches:
      - "**" # Consider refining this to specific branches if needed

jobs:
  install:
    name: Install dependencies
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.FRONTEND_DIR }} # Apply working directory for commands in this job
    steps:
      - name: "‚òÅÔ∏è checkout repository"
        uses: actions/checkout@v4
      - uses: ./.github/actions/frontend-setup
        with:
          node-version: ${{ env.NODE_VERSION }}
          frontend-dir: ${{ env.FRONTEND_DIR }}
      # No separate npm ci step here; it's handled by the composite action if cache misses.

  types-check:
    name: Correct typing
    runs-on: ubuntu-latest
    needs: [install] # Ensure install job (and thus npm ci if needed) completes first
    defaults:
      run:
        working-directory: ${{ env.FRONTEND_DIR }}
    steps:
      - name: "‚òÅÔ∏è checkout repository"
        uses: actions/checkout@v4
      - uses: ./.github/actions/frontend-setup
        with:
          node-version: ${{ env.NODE_VERSION }}
          frontend-dir: ${{ env.FRONTEND_DIR }}
      - name: "üîç check types"
        run: npm run types:check

  lint:
    name: Code standards
    runs-on: ubuntu-latest
    needs: [install]
    defaults:
      run:
        working-directory: ${{ env.FRONTEND_DIR }}
    steps:
      - name: "‚òÅÔ∏è checkout repository"
        uses: actions/checkout@v4
      - uses: ./.github/actions/frontend-setup
        with:
          node-version: ${{ env.NODE_VERSION }}
          frontend-dir: ${{ env.FRONTEND_DIR }}
      - name: "üîç lint code"
        run: npm run check:ci

  test:
    name: Code reliability
    runs-on: ubuntu-latest
    needs: [install]
    defaults:
      run:
        working-directory: ${{ env.FRONTEND_DIR }}
    steps:
      - name: "‚òÅÔ∏è checkout repository"
        uses: actions/checkout@v4
      - uses: ./.github/actions/frontend-setup
        with:
          node-version: ${{ env.NODE_VERSION }}
          frontend-dir: ${{ env.FRONTEND_DIR }}
      - name: "üß™ test code"
        run: npm run test:cov

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info # Example path, adjust as needed

  e2etest:
    name: Code reliability (E2E Tests)
    timeout-minutes: 60
    runs-on: ubuntu-latest
    needs: [install]
    defaults:
      run:
        working-directory: ${{ env.FRONTEND_DIR }}
    steps:
      - name: "‚òÅÔ∏è checkout repository"
        uses: actions/checkout@v4
      - uses: ./.github/actions/frontend-setup
        with:
          node-version: ${{ env.NODE_VERSION }}
          frontend-dir: ${{ env.FRONTEND_DIR }}

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: npm run test:e2e

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [install, types-check, lint, test, e2etest]
    defaults:
      run:
        working-directory: ${{ env.FRONTEND_DIR }}
    steps:
      - name: "‚òÅÔ∏è checkout repository"
        uses: actions/checkout@v4
      - uses: ./.github/actions/frontend-setup
        with:
          node-version: ${{ env.NODE_VERSION }}
          frontend-dir: ${{ env.FRONTEND_DIR }}
      - name: "üîß build code"
        run: npm run build
