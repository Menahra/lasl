name: Frontend

env:
  FRONTEND_DIR: apps/frontend

defaults:
  run:
    working-directory: ${{ env.FRONTEND_DIR }}

on:
  push:
    branches:
      - "**"

jobs:
  install:
    name: Install dependencies
    runs-on: ubuntu-latest
    steps:
      - name: "‚òÅÔ∏è checkout repository"
        uses: actions/checkout@v4

      - name: "üîß setup node"
        uses: actions/setup-node@v4
        with:
          node-version: lts/Hydrogen

      - name: "‚ôªÔ∏è restore node_modules cache"
        id: restore-node-modules
        uses: actions/cache@v4
        with:
          path: ${{ env.FRONTEND_DIR }}/node_modules
          # The key should be based on the package-lock.json to ensure cache invalidation when dependencies change.
          key: ${{ runner.os }}-node-modules-${{ hashFiles(format('{0}/package-lock.json', env.FRONTEND_DIR)) }}
          # Restore keys can be used to find a cache when the primary key doesn't hit.
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: "üîß install according to package-lock"
        # Only run npm ci if the cache was not a hit
        if: steps.restore-node-modules.outputs.cache-hit != 'true'
        run: npm ci

  types-check:
    name: Correct typing
    runs-on: ubuntu-latest
    needs: [install]

    steps:
      - name: "‚òÅÔ∏è checkout repository"
        uses: actions/checkout@v4

      - name: "üîß setup node"
        uses: actions/setup-node@v4
        with:
          node-version: lts/Hydrogen

      - uses: actions/cache@v4
        id: restore-build
        with:
          path: ./*
          key: ${{ runner.os }}-node-modules-${{ hashFiles(format('{0}/package-lock.json', env.FRONTEND_DIR)) }}

      - name: "üîç check types"
        run: npm run types:check

  lint:
    name: Code standards
    runs-on: ubuntu-latest
    needs: [install]

    steps:
      - name: "‚òÅÔ∏è checkout repository"
        uses: actions/checkout@v4

      - name: "üîß setup node"
        uses: actions/setup-node@v4
        with:
          node-version: lts/Hydrogen

      - uses: actions/cache@v4
        id: restore-build
        with:
          path: ./*
          key: ${{ runner.os }}-node-modules-${{ hashFiles(format('{0}/package-lock.json', env.FRONTEND_DIR)) }}

      - name: "üîç lint code"
        run: npm run check:ci

  test:
    name: Code reliability
    runs-on: ubuntu-latest
    needs: [install]

    steps:
      - name: "‚òÅÔ∏è checkout repository"
        uses: actions/checkout@v4

      - name: "üîß setup node"
        uses: actions/setup-node@v4
        with:
          node-version: lts/Hydrogen

      - uses: actions/cache@v4
        id: restore-build
        with:
          path: ./*
          key: ${{ runner.os }}-node-modules-${{ hashFiles(format('{0}/package-lock.json', env.FRONTEND_DIR)) }}

      - name: "üß™ test code"
        run: npm run test:cov

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  e2etest:
    name: Code reliability (E2E Tests)
    timeout-minutes: 60
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - uses: actions/cache@v4
        id: restore-build
        with:
          path: ./*
          key: ${{ runner.os }}-node-modules-${{ hashFiles(format('{0}/package-lock.json', env.FRONTEND_DIR)) }}

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: npm run test:e2e

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [install, types-check, lint, test, e2etest]

    steps:
      - name: "‚òÅÔ∏è checkout repository"
        uses: actions/checkout@v4

      - name: "üîß setup node"
        uses: actions/setup-node@v4
        with:
          node-version: lts/Hydrogen

      - uses: actions/cache@v4
        id: restore-build
        with:
          path: ./*
          key: ${{ runner.os }}-node-modules-${{ hashFiles(format('{0}/package-lock.json', env.FRONTEND_DIR)) }}

      - name: "üîß build code"
        run: npm run build
